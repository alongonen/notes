{
	"nodes":[
		{"type":"group","id":"f0fa24ef57869097","x":-920,"y":-1040,"width":440,"height":1426,"label":"Considerations","background":"♽Meta/Excalidraw Scripts/Downloaded/TheBrain-navigation.svg"},
		{"type":"group","id":"0a99dda60c1eddd6","x":-1600,"y":-1120,"width":581,"height":634,"label":"Initial Setting"},
		{"type":"file","file":"🏃‍♂️Projects/gene-perm/Gene Perm Initial Results.md","id":"6aa22dc58c1156dd","x":-1579,"y":-770,"width":400,"height":224},
		{"type":"file","file":"🏃‍♂️Projects/gene-perm/archive/Gene-Perm Initial Presentation.canvas","id":"4e87e0177ad4ee1c","x":-1579,"y":-1066,"width":400,"height":234},
		{"type":"file","file":"🏃‍♂️Projects/gene-perm/Ranking Genes for Permutations.md","id":"e1b34295c6fae8dd","x":-900,"y":-500,"width":400,"height":326},
		{"type":"file","file":"🏃‍♂️Projects/gene-perm/How Conditions Are Relevant For Permutations?.md","id":"ed339a4eb68582c8","x":-900,"y":-970,"width":400,"height":400},
		{"type":"text","text":"## Questions\n\n```dataviewjs\n// You can update this to filter as you like - filtering for just your daily notes would be good\nconst pages = dv.pages('\"🏃‍♂️Projects\"')\n\n// This regex will find the contents of a specifically formatted callout\n// const regex = \nconst regex = />\\s\\[\\!question\\]\\s(.+?)\\s\\#(.+?)((\\n>\\s.*?)*)\\n/\n\nconst rows = []\nfor (const page of pages) {\n    const file = app.vault.getAbstractFileByPath(page.file.path)\n    // Read the file contents\n    const contents = await app.vault.read(file)\n    // Extract the summary via regex\n    for (const callout of contents.match(new RegExp(regex, 'sg')) || []) {\n        const match = callout.match(new RegExp(regex, 's')) \n        rows.push([match[1], match[2], page.file.link]) \n        } \n    } \ndv.table(['Term', 'Flag', 'Link'], rows)\n```\n","id":"b54aa0ba7e8eb81c","x":-2480,"y":-1102,"width":760,"height":702},
		{"type":"text","text":"## Next Questions\n\n\n## Questions for projects\n```dataviewjs\n// You can update this to filter as you like - filtering for just your daily notes would be good\nconst pages = dv.pages('\"🏃‍♂️Projects\"')\n\n// This regex will find the contents of a specifically formatted callout\n// const regex = \nconst regex = />\\s\\[\\!question\\]\\s(.+?)\\s\\#next(.+?)((\\n>\\s.*?)*)\\n/\n\nconst rows = []\nfor (const page of pages) {\nconst file = app.vault.getAbstractFileByPath(page.file.path)\n// Read the file contents\nconst contents = await app.vault.read(file)\n// Extract the summary via regex\nfor (const callout of contents.match(new RegExp(regex, 'sg')) || []) {\n\tconst match = callout.match(new RegExp(regex, 's')) \n\trows.push([match[1], match[2], page.file.link]) \n\t} \n} \ndv.table(['Term', 'Flag', 'Link'], rows)\n```\n\n","id":"95cfa1587a49cf50","x":-2480,"y":40,"width":820,"height":600},
		{"type":"text","text":"## Someday Questions\n\n```dataviewjs\n// You can update this to filter as you like - filtering for just your daily notes would be good\nconst pages = dv.pages('\"🏃‍♂️Projects\"')\n\n// This regex will find the contents of a specifically formatted callout\n// const regex = \nconst regex = />\\s\\[\\!question\\]\\s+\\#someday(.*)((\\n>\\s.*?)*)\\n/\n\nconst rows = []\nfor (const page of pages) {\n    const file = app.vault.getAbstractFileByPath(page.file.path)\n    // Read the file contents\n    const contents = await app.vault.read(file)\n    // Extract the summary via regex\n    for (const callout of contents.match(new RegExp(regex, 'sg')) || []) {\n        const match = callout.match(new RegExp(regex, 's')) \n        rows.push([match[1], page.file.link]) \n        } \n    } \ndv.table(['Term', 'Link'], rows)\n```\n\n\n","id":"12c694ea0482d48f","x":-2480,"y":640,"width":1140,"height":680}
	],
	"edges":[
		{"id":"c1453a1c1d06611e","fromNode":"e1b34295c6fae8dd","fromSide":"top","toNode":"ed339a4eb68582c8","toSide":"bottom"}
	]
}